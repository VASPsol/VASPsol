diff --git a/src/.objects b/src/.objects
index 666cac6..be20ec2 100644
--- a/src/.objects
+++ b/src/.objects
@@ -77,6 +77,7 @@ SOURCE=\
 	Lebedev-Laikov.o \
 	stockholder.o \
 	dipol.o \
+	fileio.o \
 	solvation.o \
 	pot.o \
 	dos.o \
@@ -102,7 +103,6 @@ SOURCE=\
 	xml_writer.o \
 	brent.o \
 	stufak.o \
-	fileio.o \
 	opergrid.o \
 	stepver.o \
 	chgloc.o \
diff --git a/src/chain.F b/src/chain.F
index 6be9093..e78efd6 100644
--- a/src/chain.F
+++ b/src/chain.F
@@ -51,15 +51,15 @@
     IMPLICIT NONE
     SAVE
     PRIVATE
-    PUBLIC :: chain_force, chain_init, parallel_tempering
+    PUBLIC :: chain_force, chain_init, parallel_tempering, L_chain_opt_step
     PUBLIC :: Sum_Chain, And_Chain, LHYPER_NUDGE
     INTEGER mpmd_client_rank
 #ifdef EAM
     PRIVATE :: EAMForce
 #endif
     INTEGER :: ICHAIN, IOPT, ISIF_local
-    LOGICAL :: optflag, fconverge, ftot_flag, LINTERACT, LMPMD
-    LOGICAL :: sconverge, cell_flag, twodim_flag
+    LOGICAL :: optflag, fconverge, ftot_flag, LINTERACT, LMPMD, L_opt_step
+    LOGICAL :: cell_flag, twodim_flag
     REAL(q) :: EDIFFG_local, ftot_val, jacobian, PSTRESS_local 
     REAL(q),ALLOCATABLE :: Free(:,:)
 
@@ -112,7 +112,7 @@
       INTEGER :: nions,ni,nj,IU6,I
       REAL(q) :: ftot, frms, fmaxatom, ftemp, fmaxdim, toten
       REAL(q),DIMENSION(3,nions) :: posion, force
-      REAL(q),DIMENSION(3,nions) :: posion_vasp, force_vasp, force_dimlan
+      REAL(q),DIMENSION(3,nions) :: posion_vasp, force_vasp, force_local
       REAL(q),DIMENSION(3,3) :: a, b
       REAL(q),DIMENSION(3,3) :: stress, hstress, stress_vasp
       REAL(q),DIMENSION(3,3) :: sdA, sdB, sdA2
@@ -225,11 +225,9 @@
         ENDDO
       ENDIF
 
-      ! for dimer/lanczos, save the force and posion for the vasp stop criteria
-      IF (ICHAIN==2 .OR. ICHAIN==3) THEN
-        force_vasp = force
-        posion_vasp = posion
-      ENDIF
+      ! save the force and posion for the vasp stop criteria
+      force_vasp = force
+      posion_vasp = posion
 
 #ifdef EAM
       IF (.NOT. eaminit) THEN
@@ -264,10 +262,8 @@
           CALL dynmat_step(optflag,posion,toten,force,a,b)
         ELSEIF (ICHAIN==2) THEN
           CALL dimer_step(optflag,posion,toten,force,a,b)
-          force_dimlan = force
         ELSEIF (ICHAIN==3) THEN
           CALL lanczos_step(optflag,posion,toten,force,a,b)
-          force_dimlan = force         
         ELSEIF (ICHAIN==6) THEN
           CALL bbm_step(optflag,posion,toten,force,a,b) 
 !INS_BEGIN
@@ -293,11 +289,11 @@
       ! atomic constraints in direct coordinates, thanks to Christopher Stihl
       CALL KARDIR(NIONS, force, B)
       force = force*Free
-      CALL DIRKAR(NIONS, force, A)
-
-      ! for dimer/lanczos, check force criteria using the vasp force
+	   CALL DIRKAR(NIONS, force, A)
+	  
+	   ! for dimer/lanczos, check force criteria using the vasp force
       IF (ICHAIN==2 .OR. ICHAIN==3) THEN
-        force_dimlan = force
+        force_local = force
         force = force_vasp
       ENDIF
 
@@ -337,9 +333,7 @@
       IF (IU6>=0) WRITE(IU6,4695) SQRT(stot),smaxdim
 
       ! for dimer/lanczos, use projected force in optimizer
-      IF (ICHAIN==2 .OR. ICHAIN==3) THEN
-        force = force_dimlan
-      ENDIF
+      IF (ICHAIN==2 .OR. ICHAIN==3) force = force_local
 
       ! stops based on the Magnitude of the Force
       IF(ftot_flag) THEN
@@ -351,6 +345,8 @@
         ENDIF
       ENDIF
 
+      L_opt_step = .TRUE.
+      
       IF (IOPT .NE. 0) THEN
         hstress = stress
         CALL sdotA(hstress,a)
@@ -360,31 +356,22 @@
         hstress(3,2) = 0._q
         hstress = hstress/jacobian
         fconverge = (fmaxatom .LT. ABS(EDIFFG_local))
+        IF (cell_flag) fconverge = fconverge .AND. (smaxdim .LT. ABS(EDIFFG_local)*dble(nions))
         CALLMPI_C(and_chain(fconverge))
         IF (.NOT. fconverge) THEN
-          ! our own optimizers (optflag: do or do not optimize)  
-          !CALL opt_step(optflag,posion,toten,force,a,b)
+          ! our own optimizers (optflag: do or do not optimize) 
+          L_opt_step = optflag
           CALL opt_step(optflag,posion,toten,force,hstress,a,b)
+          L_opt_step = L_opt_step .AND. .NOT. optflag
         ELSE
-          IF (cell_flag) THEN
-            sconverge = (smaxdim .LT. ABS(EDIFFG_local)*dble(nions))
-            CALLMPI_C(and_chain(sconverge))
-          ELSE 
-            sconverge = .TRUE.
-          ENDIF
-          IF (.NOT. sconverge) THEN
-            CALL opt_step(optflag,posion,toten,force,hstress,a,b)
-          ELSE
-            IF (IU6>=0) WRITE(IU6,*) 'OPT: skip step - force has converged'
-            ! GH: remove any finite difference steps taken by dimer or lan
-            IF (ICHAIN==2 .OR. ICHAIN==3)  posion=posion_vasp
-            IF (ICHAIN==2) THEN
-              CALL dimer_fin()
-            ENDIF
-          ENDIF
+          IF (IU6>=0) WRITE(IU6,*) 'OPT: skip step - force has converged'
+          ! GH: remove any finite difference steps taken by dimer or lan
+          IF (ICHAIN==2 .OR. ICHAIN==3)  posion=posion_vasp
+          IF (ICHAIN==2) CALL dimer_fin()
+          L_opt_step = .TRUE.
         ENDIF
       ENDIF
-
+      
 #ifdef EAM
       Ream = posion
       ! copy saved variables back for vasp
@@ -394,9 +381,7 @@
 #endif
 
     ! for dimer/lanczos, return the true force to vasp
-    IF (ICHAIN==2 .OR. ICHAIN==3) THEN
-      force = force_vasp
-    ENDIF
+    IF (ICHAIN==2 .OR. ICHAIN==3) force = force_vasp
     ! return unprojected stress vasp
     stress = stress_vasp
 
@@ -792,6 +777,15 @@
         LHYPER_NUDGE=.TRUE.
       ENDIF
       END FUNCTION LHYPER_NUDGE
+      
+!**********************************************************************
+! Returns true if optimizer is active
+!**********************************************************************
+
+      FUNCTION L_chain_opt_step()
+      LOGICAL L_chain_opt_step
+      L_chain_opt_step = L_opt_step
+      END FUNCTION L_chain_opt_step
 
 !**********************************************************************
 ! MPI routines
diff --git a/src/electron.F b/src/electron.F
index efe4f9b..a695c79 100644
--- a/src/electron.F
+++ b/src/electron.F
@@ -509,7 +509,7 @@
 ! TOTEN = total free energy of the system
 !=======================================================================
       E%EBANDSTR=BANDSTRUCTURE_ENERGY(WDES, W)
-      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+ECORE()+ Ediel_sol
+      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+ECORE()+ Ecorr_sol
 !-MM- Added to accomodate constrained moment calculations
       IF (M_CONSTRAINED()) TOTEN=TOTEN+E_CONSTRAINT()
       io_begin
@@ -686,6 +686,10 @@
       IF (LCORREL()) THEN
          CALL SET_RHO_ONE_CENTRE(CRHODE,RHO_ONE_CENTRE)
       ENDIF
+	  
+! solvation - set SCF residual in vaspsol
+	  CALL SET_RMS_SCF(CHTOT,CHTOTL,MIX%LRESET)
+! solvation
 
       IF (MIX%IMIX==4) THEN
 !  broyden mixing ... :
@@ -807,11 +811,11 @@
     ! energy
       IF (LCORREL()) THEN
          WRITE(IO%IU6,7241) E%PSCENC,E%TEWEN,E%DENC,E%EXHF,E%XCENC,E%PAWPS,E%PAWAE, &
-                         E%EENTROPY,E%EBANDSTR,INFO%EALLAT+ECORE(),Ediel_sol,TOTEN, &
+                         E%EENTROPY,E%EBANDSTR,INFO%EALLAT+ECORE(),Ecorr_sol,TOTEN, &
                          TOTEN-E%EENTROPY,TOTEN-E%EENTROPY/(2+NORDER)   
       ELSE
          WRITE(IO%IU6,7240) E%PSCENC,E%TEWEN,E%DENC,E%EXHF,E%XCENC,E%PAWPS,E%PAWAE, &
-                         E%EENTROPY,E%EBANDSTR,INFO%EALLAT,Ediel_sol,TOTEN, &
+                         E%EENTROPY,E%EBANDSTR,INFO%EALLAT,Ecorr_sol,TOTEN, &
                          TOTEN-E%EENTROPY,TOTEN-E%EENTROPY/(2+NORDER)
       ENDIF
 
@@ -831,7 +835,7 @@
      &        '  entropy T*S    EENTRO = ',F18.8/ &
      &        '  eigenvalues    EBANDS = ',F18.8/ &
      &        '  atomic energy  EATOM  = ',F18.8/ &
-     &        '  Solvation  Ediel_sol  = ',F18.8/ &
+     &        '  Solvation  Ecorr_sol  = ',F18.8/ &
      &        '  ---------------------------------------------------'/ &
      &        '  free energy    TOTEN  = ',F18.8,' eV'// &
      &        '  energy without entropy =',F18.8, &
@@ -848,7 +852,7 @@
      &        '  entropy T*S    EENTRO = ',F18.8/ &
      &        '  eigenvalues    EBANDS = ',F18.8/ &
      &        '  core contrib.  ECORE  = ',F18.8/ &
-     &        '  Solvation  Ediel_sol  = ',F18.8/ &
+     &        '  Solvation  Ecorr_sol  = ',F18.8/ &
      &        '  ---------------------------------------------------'/ &
      &        '  free energy    TOTEN  = ',F18.8,' eV'// &
      &        '  energy without entropy =',F18.8, &
diff --git a/src/electron_OEP.F b/src/electron_OEP.F
index 4a4f727..8295f16 100644
--- a/src/electron_OEP.F
+++ b/src/electron_OEP.F
@@ -587,7 +587,7 @@ SUBROUTINE ELMIN_OEP( &
 ! TOTEN = total free energy of the system
 !=======================================================================
      E%EBANDSTR=BANDSTRUCTURE_ENERGY(WDES, WXI)
-     TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+Ediel_sol
+     TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+Ecorr_sol
      IF (M_CONSTRAINED()) TOTEN=TOTEN+E_CONSTRAINT()
 
      DESUM(N)=TOTEN-TOTENL
diff --git a/src/electron_all.F b/src/electron_all.F
index 7992c23..8bace98 100644
--- a/src/electron_all.F
+++ b/src/electron_all.F
@@ -389,7 +389,7 @@
 ! calculate old band structure energy
       E%EBANDSTR=BANDSTRUCTURE_ENERGY(WDES, W)
 ! old total energy
-      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+E%EDOTP+Ediel_sol
+      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+E%EDOTP+Ecorr_sol
 !-MM- Added to accomodate constrained moment calculations
       IF (M_CONSTRAINED()) TOTEN=TOTEN+E_CONSTRAINT()
       io_begin
@@ -489,7 +489,7 @@
       CALL PEAD_EDOTP(W,P,CQIJ,LATT_CUR,T_INFO,E2)
 
       E2%EBANDSTR= BANDSTRUCTURE_ENERGY(WDES, W)
-      TOTEN2=E2%EBANDSTR+E2%DENC+E2%XCENC+E2%TEWEN+E2%PSCENC+E2%EENTROPY+E2%PAWPS+E2%PAWAE+INFO%EALLAT+E2%EXHF+E2%EDOTP+Ediel_sol
+      TOTEN2=E2%EBANDSTR+E2%DENC+E2%XCENC+E2%TEWEN+E2%PSCENC+E2%EENTROPY+E2%PAWPS+E2%PAWAE+INFO%EALLAT+E2%EXHF+E2%EDOTP+Ecorr_sol
 !-MM- Added to accomodate constrained moment calculations
       IF (M_CONSTRAINED()) TOTEN2=TOTEN2+E_CONSTRAINT()
       io_begin
diff --git a/src/electron_gpu.F b/src/electron_gpu.F
index ffd1bcf..8f3aa39 100644
--- a/src/electron_gpu.F
+++ b/src/electron_gpu.F
@@ -556,7 +556,7 @@
 ! TOTEN = total free energy of the system
 !=======================================================================
       E%EBANDSTR=BANDSTRUCTURE_ENERGY(WDES, W)
-      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+ECORE()+ Ediel_sol
+      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+ECORE()+ Ecorr_sol
 !-MM- Added to accomodate constrained moment calculations
       IF (M_CONSTRAINED()) TOTEN=TOTEN+E_CONSTRAINT()
       io_begin
@@ -857,11 +857,11 @@
     ! energy
       IF (LCORREL()) THEN
          WRITE(IO%IU6,7241) E%PSCENC,E%TEWEN,E%DENC,E%EXHF,E%XCENC,E%PAWPS,E%PAWAE, &
-                         E%EENTROPY,E%EBANDSTR,INFO%EALLAT+ECORE(),Ediel_sol,TOTEN, &
+                         E%EENTROPY,E%EBANDSTR,INFO%EALLAT+ECORE(),Ecorr_sol,TOTEN, &
                          TOTEN-E%EENTROPY,TOTEN-E%EENTROPY/(2+NORDER)   
       ELSE
          WRITE(IO%IU6,7240) E%PSCENC,E%TEWEN,E%DENC,E%EXHF,E%XCENC,E%PAWPS,E%PAWAE, &
-                         E%EENTROPY,E%EBANDSTR,INFO%EALLAT,Ediel_sol,TOTEN, &
+                         E%EENTROPY,E%EBANDSTR,INFO%EALLAT,Ecorr_sol,TOTEN, &
                          TOTEN-E%EENTROPY,TOTEN-E%EENTROPY/(2+NORDER)
       ENDIF
 
@@ -881,7 +881,7 @@
      &        '  entropy T*S    EENTRO = ',F18.8/ &
      &        '  eigenvalues    EBANDS = ',F18.8/ &
      &        '  atomic energy  EATOM  = ',F18.8/ &
-     &        '  Solvation  Ediel_sol  = ',F18.8/ &
+     &        '  Solvation  Ecorr_sol  = ',F18.8/ &
      &        '  ---------------------------------------------------'/ &
      &        '  free energy    TOTEN  = ',F18.8,' eV'// &
      &        '  energy without entropy =',F18.8, &
@@ -898,7 +898,7 @@
      &        '  entropy T*S    EENTRO = ',F18.8/ &
      &        '  eigenvalues    EBANDS = ',F18.8/ &
      &        '  core contrib.  ECORE  = ',F18.8/ &
-     &        '  Solvation  Ediel_sol  = ',F18.8/ &
+     &        '  Solvation  Ecorr_sol  = ',F18.8/ &
      &        '  ---------------------------------------------------'/ &
      &        '  free energy    TOTEN  = ',F18.8,' eV'// &
      &        '  energy without entropy =',F18.8, &
diff --git a/src/electron_lhf.F b/src/electron_lhf.F
index e54338b..ef00cd2 100644
--- a/src/electron_lhf.F
+++ b/src/electron_lhf.F
@@ -528,7 +528,7 @@ SUBROUTINE ELMIN_LHF( &
      LHFCALC_FORCE=.FALSE.
 
      E%EBANDSTR= BANDSTRUCTURE_ENERGY(WDES, W)
-     TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+Ediel_sol
+     TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+Ecorr_sol
 
      IF (M_CONSTRAINED()) TOTEN=TOTEN+E_CONSTRAINT()
      io_begin
diff --git a/src/elinear_response.F b/src/elinear_response.F
index 09e9d41..11ef9ab 100644
--- a/src/elinear_response.F
+++ b/src/elinear_response.F
@@ -445,7 +445,7 @@ electron: DO N=1,INFO%NELM
        W1%CELTOT=   WXI%CELTOT
 
        TOTENL=TOTEN
-       TOTEN =E1%EBANDSTR+E1%DENC+E1%XCENC+E1%PAWPS+E1%PAWAE+E1%EENTROPY+Ediel_sol
+       TOTEN =E1%EBANDSTR+E1%DENC+E1%XCENC+E1%PAWPS+E1%PAWAE+E1%EENTROPY+Ecorr_sol
        DE= (TOTEN-TOTENL)
 
        IF (IO%IU0>=0) THEN
diff --git a/src/force.F b/src/force.F
index a89747f..3621aa7 100644
--- a/src/force.F
+++ b/src/force.F
@@ -1205,6 +1205,9 @@
     INTEGER :: IRDMAA
     LOGICAL,EXTERNAL :: USEFOCK_CONTRIBUTION
     REAL(q) :: TOTEN
+! solvation
+    COMPLEX(q), ALLOCATABLE :: CHGWORK(:,:)
+! solvation
 ! tb 
    REAL(q),ALLOCATABLE,SAVE ::  RELVOL(:)
     REAL(q),ALLOCATABLE ::  XDM(:)
@@ -1282,6 +1285,16 @@
 
          CALL STOP_TIMING("G",IO%IU6,'CHARGE')
       ENDIF
+      
+! solvation
+! copy charge density to CHGWORK and add solvent charge density (bound+counterion)
+      ALLOCATE(CHGWORK(GRIDC%MPLWV,WDES%NCDIJ))
+      DO ISP=1,WDES%NCDIJ
+         CALL RC_ADD(CHTOT(1,ISP),1.0_q,CHTOT(1,ISP),0.0_q,CHGWORK(1,ISP),GRIDC)
+      ENDDO
+      CALL RC_ADD(CHGWORK(1,1),1.0_q,n_solv(1),1.0_q,CHGWORK(1,1),GRIDC)
+! solvation
+      
 !----------------------- FORCES ON IONS    -----------------------------
 ! calculate the Hellmann-Feynmann forces exerted on the ions
 ! FORLOC local part
@@ -1292,7 +1305,7 @@
 
 !     local contribution to force
       CALL START_TIMING("G")
-      CALL FORLOC(GRIDC,P,T_INFO,LATT_CUR, CHTOT,EIFOR)
+      CALL FORLOC(GRIDC,P,T_INFO,LATT_CUR, CHGWORK,EIFOR)
       CALL STOP_TIMING("G",IO%IU6,'FORLOC')
 
 
@@ -1361,7 +1374,7 @@
          CALL STRKIN(W,WDES, LATT_CUR%B,SIKEF)
 ! local part
          CALL STRELO(GRIDC,P,T_INFO,LATT_CUR, &
-              CHTOT,CSTRF, INFO%NELECT, DSIF,EISIF,PSCSIF)
+              CHGWORK,CSTRF, INFO%NELECT, DSIF,EISIF,PSCSIF)
 ! non-local part
          IF (INFO%LREAL) THEN
             CALL STRNLR(GRID,NONLR_S,P,LATT_CUR,W, &
@@ -1518,10 +1531,6 @@
       TOTEN=TOTEN+OFIELD_E
       CALL STOP_TIMING("G",IO%IU6,'OFIELD')
 
-! solvation__
-      TIFOR = TIFOR + EIFOR_SOL
-! solvation__
-
 !-----------------------------------------------------------------------
 !tb start
 ! approximate vdW methods:
@@ -1820,9 +1829,6 @@
         DO J=1,T_INFO%NIONS
         DO I=1,3
           TEIFOR(I)=TEIFOR(I)+EIFOR (I,J)+PARFOR(I,J)+TAUFOR(I,J)
-! solvation__
-          TEIFOR(I)=TEIFOR(I)+EIFOR_SOL(I,J)
-! solvation__
           TEWIFO(I)=TEWIFO(I)+EWIFOR(I,J)
           TFORNL(I)=TFORNL(I)+EINL (I,J)
           THARFO(I)=THARFO(I)+HARFOR(I,J)
@@ -2227,7 +2233,7 @@
                    NEDOS, 0, 0, DOS, DOSI, PAR, DOSPAR)
 
               E%EBANDSTR=BANDSTRUCTURE_ENERGY(WDES, W)
-              TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+EALLAT+E%EXHF+ECORE()+Ediel_sol
+              TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+EALLAT+E%EXHF+ECORE()+Ecorr_sol
 
               IF (IO%IU6>=0) THEN
                  NORDER=0 ; IF (KPOINTS%ISMEAR>=0) NORDER=KPOINTS%ISMEAR
diff --git a/src/ilinear_response.F b/src/ilinear_response.F
index a28f878..e697697 100644
--- a/src/ilinear_response.F
+++ b/src/ilinear_response.F
@@ -633,7 +633,7 @@ electron: DO N=1,INFO%NELM
        E1%EENTROPY=(E1%EENTROPY-E2%EENTROPY)*(1/POTIM)
 
        TOTENL=TOTEN
-       TOTEN =E1%EBANDSTR+E1%DENC+E1%XCENC+E1%PAWPS+E1%PAWAE+E1%EENTROPY+Ediel_sol
+       TOTEN =E1%EBANDSTR+E1%DENC+E1%XCENC+E1%PAWPS+E1%PAWAE+E1%EENTROPY+Ecorr_sol
        DE= (TOTEN-TOTENL)
        
        IF (IO%IU0>=0) THEN
diff --git a/src/linear_response.F b/src/linear_response.F
index 0e93329..07e6a1a 100644
--- a/src/linear_response.F
+++ b/src/linear_response.F
@@ -359,7 +359,7 @@ CONTAINS
             LMDIM,CDIJ,CQIJ, RMS,DESUM,ICOUEV, SV, E%EXHF, IO%IU6,IO%IU0, .FALSE., .TRUE., .FALSE.)
 
        E%EBANDSTR=BANDSTRUCTURE_ENERGY(WDES, W)
-       TOTEN_=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+Ediel_sol
+       TOTEN_=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+Ecorr_sol
 
        IF (IO%IU0>=0) THEN
           WRITE(IO%IU0,1000) I, TOTEN_, TOTEN_-TOTEN, DESUM, ICOUEV, RMS
diff --git a/src/main.F b/src/main.F
index a2de352..d4e0346 100644
--- a/src/main.F
+++ b/src/main.F
@@ -797,7 +797,7 @@
       CALL AUGER_READER(IO)
       CALL WANNIER_INTERPOL_READER(IO)
 ! solvation__
-      CALL SOL_READER(T_INFO%NIONS,INFO%EDIFF,IO)
+      CALL SOL_READER(IO)
 ! solvation__
 ! bexternal__
       CALL BEXT_READER(IO%IU0,IO%IU5)
@@ -2728,6 +2728,12 @@
             INFO%LSTOP=.TRUE.   ! stop ionic loop immediately
          ENDIF
       ENDIF
+
+! solvation__
+         CALL SOL_INIT(GRIDC, LATT_CUR, T_INFO, IO, INFO)
+! solvation__
+			
+			
 !***********************************************************************
 !***********************************************************************
 !
@@ -2947,6 +2953,8 @@ io_end
           INFO%LOVERL,LMDIM,CQIJ, LDIMP, LDIMP,LMDIMP,.FALSE., IO%LORBIT,PAR, &
           EFERMI, KPOINTS%EMIN, KPOINTS%EMAX)
       ENDIF
+      
+      
 !***********************************************************************
 !***********************************************************************
 ! Now perform the ion movements:
@@ -3610,7 +3618,7 @@ ibrion: IF (DYN%IBRION==0) THEN
            EACC=MAX(ABS(INFO%EDIFF),ABS(ECONV))
 
            CALLMPI_C( sum_chain( EACC))
-           IF ( LHYPER_NUDGE() ) EACC=1E10    ! energy not very accurate, use only force
+           IF ( LHYPER_NUDGE() .OR. L_const_pot() ) EACC=1E10    ! energy not very accurate, use only force
 
            CALL IONCGR(IFLAG,T_INFO%NIONS,TOTEN,LATT_CUR%A,LATT_CUR%B,DYN%NFREE,DYN%POSION,DYN%POSIOC, &
                 FACT,DYN%D2C,FACTSI,D2SIF,DYN%D2,DYN%D3,DISMAX,IO%IU6,IO%IU0, &
@@ -3664,8 +3672,10 @@ ibrion: IF (DYN%IBRION==0) THEN
         ELSE IF (DYN%IBRION==11) THEN
            CALL INPOS(LATT_CUR, T_INFO, DYN, IO%IU6, IO%IU0, INFO%LSTOP, WDES%COMM)
         ENDIF
-
+        
+!-----------------------------------------------------------------------
 ! restrict volume for constant volume relaxation
+!-----------------------------------------------------------------------
         IF (DYN%ISIF==4 .OR. DYN%ISIF==5) THEN
            OMEGA_OLD=LATT_CUR%OMEGA
            CALL LATTIC(LATT_CUR)
@@ -3694,9 +3704,17 @@ ibrion: IF (DYN%IBRION==0) THEN
 
         ! use forces as stopping criterion if EDIFFG<0
         IF (DYN%EDIFFG<0) INFO%LSTOP=LSTOP2
+        
+!-----------------------------------------------------------------------
+! update number of electrons for constant potential calculation
+!-----------------------------------------------------------------------
+        INFO%LSTOP = INFO%LSTOP .AND. check_EFERMI(EFERMI,INFO%EDIFF)
+        IF (L_chain_opt_step() .AND. .NOT. INFO%LSTOP) &
+           CALL update_NELECT(INFO%NELECT, EFERMI)
+!-----------------------------------------------------------------------
+        
         io_begin
         WRITE(TIU6,130)
-
         IF (INFO%LSTOP) THEN
            IF (IO%IU0>=0) &
                 WRITE(TIU0,*) 'reached required accuracy - stopping ', &
@@ -3730,6 +3748,7 @@ ibrion: IF (DYN%IBRION==0) THEN
               T_INFO,DYN,SYMM,P,NONL_S,NONLR_S,LMDIM,CDIJ,CQIJ,SV,E,INFO,IRDMAX,IO)
        END IF !LJ_ONLY
       ENDIF ibrion
+    
 !=======================================================================
 !  update of ionic positions performed
 !  in any case POSION should now hold the new positions and
@@ -4122,7 +4141,7 @@ ibrion: IF (DYN%IBRION==0) THEN
      ! for the selfconsistent update set W_F%CELTOT and TOTEN now
       IF (INFO%LONESW) W_F%CELTOT=W%CELTOT
       E%EBANDSTR= BANDSTRUCTURE_ENERGY(WDES, W)
-      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+Ediel_sol
+      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+Ecorr_sol
 
       CALL STOP_TIMING("G",IO%IU6,'EDDIAG')
 
@@ -4263,6 +4282,9 @@ ibrion: IF (DYN%IBRION==0) THEN
          io_end
 ! comment out the following line to add  exchange correlation
          IF (IO%LVHAR) CALL SET_LEXCH(-1)
+         ! solvation - write out ionic and bound charges in vaspsol
+         CALL SET_SOL_WRITE
+         ! solvation - 
          CALL POTLOK(GRID,GRIDC,GRID_SOFT, WDES%COMM_INTER, WDES, &
                   INFO,P,T_INFO,E,LATT_CUR, &
                   CHTOT,CSTRF,CVTOT,DENCOR,SV, SOFT_TO_C,XCSIF)
diff --git a/src/pot.F b/src/pot.F
index 034b134..d5101d2 100644
--- a/src/pot.F
+++ b/src/pot.F
@@ -65,7 +65,7 @@
       RGRID      DENCOR(GRIDC%RL%NP)
       REAL(q)    XCSIF(3,3),TMPSIF(3,3)
 ! work arrays (allocated after call to FEXCG)
-      COMPLEX(q), ALLOCATABLE::  CWORK1(:),CWORK(:,:)
+      COMPLEX(q), ALLOCATABLE::  CWORK1(:),CWORK(:,:),CVHAR(:)
       REAL(q) ELECTROSTATIC
       LOGICAL, EXTERNAL :: L_NO_LSDA_GLOBAL
 
@@ -79,7 +79,7 @@
 #endif
       
       MWORK1=MAX(GRIDC%MPLWV,GRID_SOFT%MPLWV)
-      ALLOCATE(CWORK1(MWORK1),CWORK(GRIDC%MPLWV,WDES%NCDIJ))
+      ALLOCATE(CWORK1(MWORK1),CWORK(GRIDC%MPLWV,WDES%NCDIJ),CVHAR(GRIDC%MPLWV))
 
 !-----------------------------------------------------------------------
 !
@@ -316,14 +316,9 @@
 !-----------------------------------------------------------------------
       CALL POTHAR(GRIDC, LATT_CUR, CHTOT, CWORK,E%DENC)
       DO I=1,GRIDC%RC%NP
-         CVTOT(I,1)=CVTOT(I,1)+CWORK(I,1)
+         CVHAR(I)=CWORK(I,1)
       ENDDO
-! solvation__
-!-----------------------------------------------------------------------
-! add the dielectric corrections to CVTOT and the energy
-!-----------------------------------------------------------------------
-      CALL SOL_Vcorrection(INFO,T_INFO,LATT_CUR,P,WDES,GRIDC,CHTOT,CVTOT)
-! solvation__
+
 !-----------------------------------------------------------------------
 !  add local pseudopotential potential
 !-----------------------------------------------------------------------
@@ -332,6 +327,19 @@
       ELSE
          CALL POTION_PARTICLE_MESH(GRIDC,P,LATT_CUR,T_INFO,CWORK,E%PSCENC,E%TEWEN)
       ENDIF
+      DO I=1,GRIDC%RC%NP
+         CVHAR(I)=CVHAR(I)+CWORK(I,1)
+      ENDDO
+      
+! solvation__
+!-----------------------------------------------------------------------
+! add the dielectric corrections to CVTOT and the energy
+!-----------------------------------------------------------------------
+      CALL SOL_Vcorrection(CHTOT, DENCOR, CVHAR, P)
+      DO I=1,GRIDC%RC%NP
+         CVTOT(I,1)=CVTOT(I,1)+CVHAR(I)+V_corr(I)
+      ENDDO
+! solvation__
 
       ELECTROSTATIC=0
       NG=1
@@ -350,13 +358,11 @@
 
       E%PSCENC=E%PSCENC + DIP%ECORR + DIP%E_ION_EXTERN
 
-      DO I=1,GRIDC%RC%NP
-         CVTOT(I,1)=CVTOT(I,1)+CWORK(I,1)
-      ENDDO
 ! bexternal__
       IF (LBEXTERNAL()) CALL BEXT_ADDV(CVTOT,GRIDC,SIZE(CVTOT,2))
 ! bexternal__
       CALL POT_FLIP(CVTOT, GRIDC,WDES%NCDIJ )
+	  
 !=======================================================================
 ! if overlap is used :
 ! copy CVTOT to SV and set contribution of unbalanced lattice-vectors
diff --git a/src/subrot_scf.F b/src/subrot_scf.F
index 3dd2b14..ed1ede9 100644
--- a/src/subrot_scf.F
+++ b/src/subrot_scf.F
@@ -323,7 +323,7 @@ MODULE subrotscf
 !=======================================================================
       E%EBANDSTR=BANDSTRUCTURE_ENERGY(W%WDES, W)
 
-      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+Ediel_sol
+      TOTEN=E%EBANDSTR+E%DENC+E%XCENC+E%TEWEN+E%PSCENC+E%EENTROPY+E%PAWPS+E%PAWAE+INFO%EALLAT+E%EXHF+Ecorr_sol
 
 !---- write total energy to OSZICAR file and stdout
       DESUM(N)=TOTEN-TOTENL
